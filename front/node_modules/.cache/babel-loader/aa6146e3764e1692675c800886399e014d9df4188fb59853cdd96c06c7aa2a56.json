{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\djehj\\\\OneDrive\\\\Escritorio\\\\evol-services\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, CardContent, CircularProgress, Grid, TextField, Typography } from '@mui/material';\nimport { param } from 'express/lib/request';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskForm() {\n  _s();\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const params = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const res = await fetch('http://localhost:4000/tasks', {\n      method: 'POST',\n      body: JSON.stringify(task),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    setLoading(false);\n    navigate('/');\n  };\n  const handleChange = e => setTask({\n    ...task,\n    [e.target.name]: e.target.value\n  });\n  const loadTask = async id => {\n    const res = await fetch(`http://localhost:4000/tasks/${params.id}`);\n    const data = await res.json();\n    console.log(data);\n  };\n  useEffect(() => {\n    if (params.id) {\n      console.log('fetch task');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 3,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mt: 5\n        },\n        style: {\n          backgroundColor: '#1e272e',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"5\",\n          textAlign: \"center\",\n          color: \"white\",\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              name: \"title\",\n              variant: \"filled\",\n              label: \"Write your title\",\n              sx: {\n                display: 'block',\n                margin: '.5rem 0'\n              },\n              onChange: handleChange,\n              inputProps: {\n                style: {\n                  color: 'white'\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: 'white'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"description\",\n              ariant: \"filled\",\n              label: \"Write your description\",\n              multiline: true,\n              rows: 4,\n              sx: {\n                display: 'block',\n                margin: '.5rem 0'\n              },\n              onChange: handleChange,\n              inputProps: {\n                style: {\n                  color: 'white'\n                }\n              },\n              InputLabelProps: {\n                style: {\n                  color: 'white'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              type: \"submit\",\n              disabled: !task.title || !task.description,\n              children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"inherit\",\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 28\n              }, this) : 'Create'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"wy9Yx/CJIf3PTpbPNREvCAFpJMw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Button","Card","CardContent","CircularProgress","Grid","TextField","Typography","param","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","TaskForm","_s","task","setTask","title","description","loading","setLoading","navigate","params","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","headers","data","json","handleChange","target","name","value","loadTask","id","console","log","container","direction","alignItems","justifyContent","children","item","xs","sx","mt","style","backgroundColor","padding","variant","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","display","margin","onChange","inputProps","InputLabelProps","ariant","multiline","rows","type","disabled","size","_c","$RefreshReg$"],"sources":["C:/Users/djehj/OneDrive/Escritorio/evol-services/client/src/components/TaskForm.js"],"sourcesContent":["import { Button, Card, CardContent, CircularProgress, Grid, TextField, Typography } from '@mui/material'\r\nimport { param } from 'express/lib/request'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nexport default function TaskForm() {\r\n\r\n\r\n  const [task, setTask] = useState({\r\n    title: '',\r\n    description: '',\r\n  })\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n  const params = useParams()\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    setLoading(true)\r\n\r\n    const res = await fetch('http://localhost:4000/tasks', {\r\n      method: 'POST',\r\n      body: JSON.stringify(task),\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n    const data = await res.json()\r\n\r\n    setLoading(false)\r\n\r\n    navigate('/')\r\n  };\r\n\r\n  const handleChange = e =>\r\n    setTask({ ...task, [e.target.name]: e.target.value });\r\n\r\n\r\n  const loadTask = async (id) => {\r\n    const res = await fetch(`http://localhost:4000/tasks/${params.id}`)\r\n    const data = await res.json()\r\n    console.log(data)\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n      if (params.id) {\r\n        console.log('fetch task')\r\n      }\r\n    })\r\n\r\n  return (\r\n    <Grid container direction='column' alignItems='center' justifyContent='center'>\r\n      <Grid item xs={3}>\r\n        <Card sx={{ mt: 5 }} style={{ backgroundColor: '#1e272e', padding: '1rem' }}>\r\n          <Typography variant='5' textAlign='center' color='white'>\r\n            Create Task\r\n          </Typography>\r\n          <CardContent>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                name='title'\r\n                variant='filled'\r\n                label='Write your title'\r\n                sx={{ display: 'block', margin: '.5rem 0' }}\r\n                onChange={handleChange}\r\n                inputProps={{ style: { color: 'white' } }}\r\n                InputLabelProps={{ style: { color: 'white' } }} />\r\n              <TextField\r\n                name='description'\r\n                ariant='filled'\r\n                label='Write your description'\r\n                multiline\r\n                rows={4} sx={{ display: 'block', margin: '.5rem 0' }}\r\n                onChange={handleChange}\r\n                inputProps={{ style: { color: 'white' } }}\r\n                InputLabelProps={{ style: { color: 'white' } }} />\r\n              <Button variant='contained' color='primary' type='submit' disabled={!task.title || !task.description}>\r\n                {loading ? <CircularProgress\r\n                  color='inherit'\r\n                  size={24}\r\n                /> : 'Create'}\r\n              </Button>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}